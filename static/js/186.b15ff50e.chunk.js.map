{"version":3,"file":"static/js/186.b15ff50e.chunk.js","mappings":"qLAyBA,UArBgB,WACd,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GAEAE,GAAgBC,EAAAA,EAAAA,GAAe,SAAD,OAAUH,EAAV,aAAyB,WAAvDE,YAEFE,GAAaC,EAAAA,EAAAA,cAAY,WAC7B,OAAKH,EAAYI,OAGVJ,EAAYK,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAST,EAApB,EAAoBA,GAApB,OACrB,2BACE,wBACE,uBAAIQ,OAEN,uBAAIC,MAJGT,EADY,KAFd,sEAUV,GAAE,CAACE,IAEJ,OAAO,wBAA4B,kBAAhBA,GAA4BE,KAChD,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useCallback } from 'react';\nimport useQueryResult from '../../castomHooks/useQueryResult';\n\nconst Reviews = () => {\n  const { id } = useParams();\n\n  const { queryResult } = useQueryResult(`movie/${id}/reviews?`, 'reviews');\n\n  const itemCreate = useCallback(() => {\n    if (!queryResult.length) {\n      return <p>We don't have any reviews for this movie ((</p>;\n    }\n    return queryResult.map(({ author, content, id }) => (\n      <li key={id}>\n        <p>\n          <b>{author}</b>\n        </p>\n        <p>{content}</p>\n      </li>\n    ));\n  }, [queryResult]);\n\n  return <ul>{typeof queryResult !== 'string' && itemCreate()}</ul>;\n};\nexport default Reviews;\n"],"names":["id","useParams","queryResult","useQueryResult","itemCreate","useCallback","length","map","author","content"],"sourceRoot":""}